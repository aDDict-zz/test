#!/usr/bin/perl

use DBI;

$dbh = DBI->connect('DBI:mysql:maxima:localhost:3306','root','bartok26') || die $DBI::errstr ; 
$dbh->{RaiseError} = 1;
$dbh->do("set names cp1250");

@filters = (18641);

for (@filters) {

    $filter_id=$_;
    $group_name="permission";
    $group_id=543;

    $filter_error="filter_ok";
    $filtres="";
    open FILTER, "/usr/local/maxima/filter_engine $filter_id|";
    while (<FILTER>) {
        $filtres .= $_;
    }
    close (FILTER);
    @filtarr = split /\n/,$filtres;
    if ($filtarr[0] eq "filter_ok") {
            $filter_query=$filtarr[1];
            $limitord=$filtarr[2];
            $limitnum=$filtarr[3];
            $syntax_error=$filtarr[4];
            $syntax_error_text=$filtarr[5];
    }
    else {
            $filter_error="error in filter engine: $filtarr[0]";
            print "$filter_error\n";
            exit;
    }

    if (length($limitord)) { 
          $limitexp=" order by $limitord limit $limitnum";
    }
    else {
          $limitexp="";
    }
    $sql="select id,ui_vezeteknev,ui_szuletesnap,ui_keresztnev from users_$group_name where validated='yes' and ($filter_query) and robinson='no' and bounced='no' $limitexp";
    $sth = $dbh->prepare($sql);
    $sth->execute;

    print "$sql\n";

    $i = 0;

    $mfile="provident$filter_id";
    open (OO,">$mfile");

    while (@r = $sth->fetchrow_array) {
        $i++;
        if ($i/100 == int($i/100)) {
            print "$i\n";
        }
        $id=$r[0];
        $mc = mx_wund_match($r[1],1,"0");
        $mc .= mx_wund_match($r[1],2,"0");
        $mc .= mx_wund_match($r[1],3,"0");
        $mc .= mx_wund_match($r[3],1,"0");
        $mc .= mx_wund_match($r[3],2,"0");
        $mc .= mx_wund_match($r[3],3,"0");
        $r[2] =~ s/-//g;
        $mc .= substr($r[2],0,6);
        # - vezetéknév elso 3 karaktere (ahol nincs ilyen ott nulla)
        # - keresztnév elso három karaktere (ahol nincs ilyen ott nulla)
        # - születési dátumból elso 6 szám (pl.198211)
        print OO "$mc,$id\n";
    }
close OO;
}

sub mx_num($) {

    $num=shift;
    $num=~s/[^0-9]//g;
    $lnl=length($num);
    if ($lnl<4) {
        for ($i=0;$i<4-$lnl;$i++) {
            $num="0$num";
        }
    }
    return substr($num,0,4);
}

sub mx_wund_match($;$;$) {

    my $str=shift;
    my $char=shift;
    my $stuff=shift;

    if (0) {
        $str =~ s/Á/A/g;
        $str =~ s/É/E/g;
        $str =~ s/Í/I/g;
        $str =~ s/Ó/O/g;
        $str =~ s/Ö/O/g;
        $str =~ s/Õ/O/g;
        $str =~ s/Ú/U/g;
        $str =~ s/Ü/U/g;
        $str =~ s/Û/U/g;
        $str =~ s/á/A/g;
        $str =~ s/é/E/g;
        $str =~ s/í/I/g;
        $str =~ s/ó/O/g;
        $str =~ s/ö/O/g;
        $str =~ s/õ/O/g;
        $str =~ s/ú/U/g;
        $str =~ s/ü/U/g;
        $str =~ s/û/U/g;
        $str = uc($str);
    }

    return $stuff unless length($str);
    if ($char==-1) {
        $char=length($str);
    }
    if (length($str)<$char) {
        return $stuff;
    }
    $char--;
    return substr($str,$char,1);
}
