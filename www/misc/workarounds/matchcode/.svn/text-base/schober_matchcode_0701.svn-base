#!/usr/bin/perl

use DBI;

$dbh = DBI->connect('DBI:mysql:maxima:localhost:3306','root','bartok26') || die $DBI::errstr ; 
$dbh->{RaiseError} = 1;
$dbh->do("set names cp1250");

$group_name="permission";
    $sql="select ui_hazszam,ui_utca_nev,ui_vezeteknev,ui_keresztnev,id,ui_ir from users_$group_name where validated='yes' and robinson='no' and bounced='no'";
    $sth = $dbh->prepare($sql);
    $sth->execute;

    print "$sql\n";

    $i = 0;

    $mfile="schobert0701";
    open (OO,">$mfile");

    while (@r = $sth->fetchrow_array) {
        $i++;
        if ($i/100 == int($i/100)) {
            print "$i\n";
        }
        $id=$r[4];
        $mc = mx_num($r[5]);
        $mc .= mx_wund_match($r[2],1," ");
        $mc .= mx_wund_match($r[2],3," ");
        $mc .= mx_wund_match($r[2],4," ");
        $mc .= mx_wund_match($r[2],5," ");
        $mc .= mx_wund_match($r[1],1," ");
        $mc .= mx_wund_match($r[1],2," ");
        $mc .= mx_wund_match($r[1],3," ");
        $mc .= mx_wund_match($r[1],5," ");
        $mc .= mx_num($r[0]);

    #Az adatokat ékezetek nélkül a következõ karaktersorozattá alakítjuk:
    #
    #Irányítószám
    #Vezetéknév elsõ karaktere
    #Vezetéknév 3.,4.,5.  karaktere, hiányzó karakter esetén jobbról space-szel feltöltve
    #Utcanév elsõ 3 karaktere, hiányzó karakter esetén jobbról space-szel feltöltve
    #Utcanév 5. karaktere, hiányzó karakter esetén space-szel helyettesítve
    #Házszám elsõ 4 numerikus karaktere vagy ha Utcanévvel egy mezõben van, akkor Utcanév mezõ elsõ 4 numerikus karaktere, ha nincs annyi, akkor balról 0-val feltöltve 4 karakterre
    #
    #Összesen 16 karakter
    #
    #Pl.:
    #
    #Nagy Natália
    #1117 Budapest
    #Bocskai út 10. III/21.
    #
    #Matchkód: 1117NGY BOCK1021,

        print OO "$mc,$id\n";
    }
close OO;

sub mx_num($) {

    $num=shift;
    $num=~s/[^0-9]//g;
    $lnl=length($num);
    if ($lnl<4) {
        for ($i=0;$i<4-$lnl;$i++) {
            $num="0$num";
        }
    }
    return substr($num,0,4);
}

sub mx_wund_match($;$;$) {

    my $str=shift;
    my $char=shift;
    my $stuff=shift;

    $str =~ s/Á/A/g;
    $str =~ s/É/E/g;
    $str =~ s/Í/I/g;
    $str =~ s/Ó/O/g;
    $str =~ s/Ö/O/g;
    $str =~ s/Õ/O/g;
    $str =~ s/Ú/U/g;
    $str =~ s/Ü/U/g;
    $str =~ s/Û/U/g;
    $str =~ s/á/A/g;
    $str =~ s/é/E/g;
    $str =~ s/í/I/g;
    $str =~ s/ó/O/g;
    $str =~ s/ö/O/g;
    $str =~ s/õ/O/g;
    $str =~ s/ú/U/g;
    $str =~ s/ü/U/g;
    $str =~ s/û/U/g;
    $str = uc($str);
    
    return $stuff unless length($str);
    if ($char==-1) {
        $char=length($str);
    }
    if (length($str)<$char) {
        return $stuff;
    }
    $char--;
    return substr($str,$char,1);
}
